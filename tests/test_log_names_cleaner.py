import unittest
import sys
import os

sys.path.append(os.path.abspath('../logsbrowser'))

from source.cleaner import clear


log_names = (
	("20110114_10_BlockingActions.EventProcessor.Log.txt", "BlockingActions.EventProcessor.Log", "txt"),
	("20110114_10_RequestObject.w3wp.Log.txt", "RequestObject.w3wp.Log", "txt"),
	("20110114_CalculationMethodRefBook.Log.txt", "CalculationMethodRefBook.Log", "txt"),
        ("20110114_CRM.Gateway.Log.txt", "CRM.Gateway.Log", "txt"),
	("FORIS.TelCRM.CustomerManagement.HostingService.log", "FORIS.TelCRM.CustomerManagement.HostingService", "log"),
	("FORIS.TelCRM.CustomerManagement.HostingService.log.1", "FORIS.TelCRM.CustomerManagement.HostingService", "log"),
        ("CommunityUI.log", "CommunityUI", "log"),
	("CRM.CORE.AccreditationCardEventProcessor.log", "CRM.CORE.AccreditationCardEventProcessor", "log"),
	("CRM.CORE.SEND_SMS_NOTIFICATION.log", "CRM.CORE.SEND_SMS_NOTIFICATION", "log"), ("NOWPSP.txt", "NOWPSP", "txt"),
        ("InterfaceService.txt", "InterfaceService", "txt"), ("ProcessorService.txt.1", "ProcessorService", "txt"),
        ("debug-all.log", "debug-all", "log"),
        ("debug-only.log", "debug-only", "log"), ("MGATest_all.log", "MGATest_all", "log"),
	("FORIS.OrderManagement.Unspecified.log.2011-01-13", "FORIS.OrderManagement.Unspecified", "log"),
	("PerformanceLog_ChangeContract_2011_01_14.log", "PerformanceLog_ChangeContract", "log"),
        ("Prod_UI_WCF.svclog", "Prod_UI_WCF", "svclog"),
        ("AccountsReceivable_2011-01-14.log", "AccountsReceivable", "log"),
	("AccountsReceivable_2011-01-14_Debtor.log", "AccountsReceivable_Debtor", "log"),
	("FORIS.Billing.BillingEngine.BAS_14-01-11_BillClientData.log", "FORIS.Billing.BillingEngine.BAS_BillClientData", "log"),
        ("wslog_14012011.txt", "wslog", "txt"),
        ("uprsg20110114.log", "uprsg", "log"),
        ("uprsg20110114.log.1", "uprsg", "log"),
        ("uprsg20110114.log20110114.log", "uprsg", "log"),
        ("20110114_AMIManager_Message.log", "AMIManager_Message", "log"),
        ("CounterFormatter20110114061604.27.txt", "CounterFormatter", "txt"),
        ("CacheRE_2011-01-14-06-15-01.1617822.txt", "CacheRE", "txt"),
        ("RatingEngine_2011-01-14-06-17-10.8239794.txt", "RatingEngine", "txt"),
        ("psp_20110114_11.log", "psp", "log"),
        ("psp_timer_20110114_14.log", "psp_timer", "log"),
        ("SQR_PC.log", "SQR_PC", "log"),
	("Foris.ResourceInventory.GUI-1101.log", "Foris.ResourceInventory.GUI", "log"),
	("14012011150352-EMAILCON_EMAILCON_01_activity.log", "EMAILCON_EMAILCON_01_activity", "log"),
        ("CollectionPaymentMM4.log", "CollectionPaymentMM4", "log"),
        ("CollectionPaymentMM4.log20110113", "CollectionPaymentMM4", "log"),
        ("0_1659702_0.000001.log", "", "log"),
        ("4_0_0.000001.log", "", "log"),
        ("4_0_0.log", "", "log"),
        ("community-log.txt", "community-log", "txt"),
	("ThreadMachine.ThreadMachineService.log", "ThreadMachine.ThreadMachineService", "log"),
	("ThreadMachine.ThreadMachineService.log.1", "ThreadMachine.ThreadMachineService", "log"),
        ("back-end-all.log", "back-end-all", "log"),
        ("back-end-debug-only.log", "back-end-debug-only", "log"),
        ("OTSP.log", "OTSP", "log"),
        ("OTSP.log.1", "OTSP", "log"),
        ("20110114_App.log", "App", "log"),
        ("20110114_SCHManager_Message.log", "SCHManager_Message", "log"),
        ("CounterFormatter20110114061401.27.txt", "CounterFormatter", "txt"),
	("foris_catalogue_service-110114.log", "foris_catalogue_service", "log"),
        ("DEEngine-14012011-full.0", "DEEngine-full", "log"),
        ("UnitedBillInvoice-14012011-full.0", "UnitedBillInvoice-full", "log"),
	("Foris.ResourceInventory.Services-1101.log", "Foris.ResourceInventory.Services", "log"),
	("14012011061258-SMSCON_USSDCON_01_error.log", "SMSCON_USSDCON_01_error", "log"),
        ("DE_Proxy_Info-14012011-ERROR.0", "DE_Proxy_Info-ERROR", "log"),
        ("10080_(null).log", "", "log"),
        ("10080_PSPSecond.log", "PSPSecond", "log"),
        ("10152_Normal Phase Single.log", "Normal Phase Single", "log"),
        ("10188_Scenario_NowPlus_PSP.log", "Scenario_NowPlus_PSP", "log"),
        ("196_PSPINRejected.log", "PSPINRejected", "log"),
        ("3280_Scenario_Reproc_OFFLINE.log", "Scenario_Reproc_OFFLINE", "log"),
        ("880_PSPIN.log", "PSPIN", "log"),
	("foris_catalogue_service-110114.log", "foris_catalogue_service", "log"),
	("Foris.ResourceInventory.Services-1101.log", "Foris.ResourceInventory.Services", "log"),
        ("01012011000000-Dispatcher.log", "Dispatcher", "log"),
	("AccountsReceivable_2010-11-30_Balance.log", "AccountsReceivable_Balance", "log"),
	("AccountsReceivable_2010-12-16_Synchronization.log", "AccountsReceivable_Synchronization", "log"),
	("AccountsReceivable_2010-12-16_UniPe16Docu16enP.log", "AccountsReceivable_UniPeDocuenP", "log"),
	("AccountsReceivable_2011-01-12_UniPe12Docu13enP.log", "AccountsReceivable_UniPeDocuenP", "log"),
        ("0_34770811_0.000001.log", "", "log"),
        ("4_0_0.log", "", "log"),
        ("71_0_0.log", "", "log"),
	("RatingEngineLog_2009-09-15-19-15-46.0504201.txt", "RatingEngineLog", "txt"),
	("RDEditorLog_defimov_2009-06-30T172320(1141202).txt", "RDEditorLog_defimov", "txt"),
	("RDEditorLog_a.marchenko_2010-10-13T124612(0364023).txt", "RDEditorLog_a.marchenko", "txt"),
	("RDEditorLog_amarchenko_2010-11-08T173216(9993497).txt", "RDEditorLog_amarchenko", "txt"),
        ("InterfaceService.log.2011-01-11", "InterfaceService", "log"),
        ("CCUIAjNet.log.2011-01-11", "CCUIAjNet", "log"),
	("FORIS.Billing.AccountsReceivable.Listener_01-01-11_FORIS.Billing.ProcessHandler.ProcessManager.log", "FORIS.Billing.AccountsReceivable.Listener_FORIS.Billing.ProcessHandler.ProcessManager", "log"),
	("FORIS.Billing.AccountsReceivable.PaymentRegistration_01-01-11_FORIS.Billing.Utility.MessageQueueLoadBalancer.log", "FORIS.Billing.AccountsReceivable.PaymentRegistration_FORIS.Billing.Utility.MessageQueueLoadBalancer", "log"),
	("ServerAdvice_FORIS.TelBill.Collection.AdviceService.AdviceExporter_08_01_2011.log", "ServerAdvice_FORIS.TelBill.Collection.AdviceService.AdviceExporter", "log"),
        ("CounterFormatter20101215165707.41.txt", "CounterFormatter", "txt"),
        ("psp_20101126_18.log", "psp", "log"),
        ("psp_timer.log", "psp_timer", "log"),
        ("SQR_AM.log.1", "SQR_AM", "log"),
        ("SQR_AM.log.10", "SQR_AM", "log"),
        ("SQR_AM.log.100", "SQR_AM", "log"),
        ("SQR_AM.log.1000", "SQR_AM", "log"),
        ("SQR_Divider.log", "SQR_Divider", "log"),
        ("SQR_MSCP.log", "SQR_MSCP", "log"),
        ("StateIn.log", "StateIn", "log"),
        ("StateIn.log.1", "StateIn", "log"),
        ("StateIn.log_", "StateIn", "log"),
	("Foris.ResourceInventory.GUI-1012.log", "Foris.ResourceInventory.GUI", "log"),
        ("foris_catalogue_mc-101230.log", "foris_catalogue_mc", "log"),
        ("Security_Service.log.2010-10-14", "Security_Service", "log"),
        ("Security_Service.log.2010-11-01.1", "Security_Service", "log"),
        ("BonusSystem.Service.log", "BonusSystem.Service", "log"),
        ("BonusSystem.Service.log20110113", "BonusSystem.Service", "log"),
        ("FORIS.Catalogues.log", "FORIS.Catalogues", "log"),
        ("FORIS.Catalogues.log.2011-01-11", "FORIS.Catalogues", "log"),
	("FORIS.TelCRM.Interfaces.Workflow2.log", "FORIS.TelCRM.Interfaces.Workflow2", "log"),
	("FORIS.TelCRM.Interfaces.Workflow2.log.2011-01-06", "FORIS.TelCRM.Interfaces.Workflow2", "log"),
        ("Marti.PAM.BL.log.2010-11-03", "Marti.PAM.BL", "log"),
        ("txt", "", "txt"),
        ("1.txt", "", "txt"),
        ("SPA.BM.01", "SPA", "bm"),
        ("01112011000000-SMSCON_USLTCON_01_activity.log", "SMSCON_USLTCON_01_activity", "log"),
        ("01112011071008-SMSCON_USSDCON_04_error.log", "SMSCON_USSDCON_04_error", "log")
)

class TestParseFileName(unittest.TestCase):
    def check(self, parsed, true, ext):
        self.assertEqual((parsed, ext), (true[1], true[2]), "%s parsed incorrectly: %s %s instead of %s %s" % (true[0],parsed,ext,true[1],true[2]))

if __name__ == '__main__':
    for val in log_names:
        parsed, ext = clear(val[0])
        def ch(p, v, e):
            return lambda self: self.check(p, v, e)
        setattr(TestParseFileName, "test_%s" % val[0], ch(parsed, val, ext))
    unittest.main()
