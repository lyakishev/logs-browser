####FEAT: режим старт-стоп - интеллектуальный режим: посленажатия старт фиксиуется время всех щелчков мышью и после нажатия стоп ищутся логи, в таблице логов подсвечиваются логи: которые совпадают по времени щелчков - темным, далее по мере отдаления по времени (сколько секунд?) -цвет светлее (+СКРИНШОТЫ?)
###+#FEAT: если учитывать папки "расширением", можно пробовать делать listdir на элементах с расширением но без txt и лог - и в try обернуть - сделать и пропрофайлить.
####FEAT: щелчок - узел дерева, потомки - логи до(после?) этого щелчка до следующего
####FEAT: gtkmvc
####TODO: возможность поставить логу метку в окне просмотра и через всплыв меню в таблице (метка слово+картинки, теги?)
####TODO: парсить mm/dd/yyyy hh:mm:ss
####
####BUG: удаление пустых путей опять отвалилось
####FEAT: ntplib
###
####FEAT#: PL/SQL analyzer:
###	процедура, функция: тело, связи с другими объектами - через from и т1.п1=т2.п1 в where,
###	через другие функции, процедуры,
###	через cairo - диаграмму связей.
###
####FEAT#: File Monitor - онлайн заполнение таблицы
####TODO: Кнопки обновления дерева на деревом источников, load all load new edit config expand all collapse all, collapse non-active, collapse non-active
####уменьшить вложенность дерева: если один потомок - объединять
####Ctrl-Z

#Кнопку Очистить рядом с фильтром под деревом логов
src/widgets/logs_notebook.py:from log_window import SeveralLogsWindow  #TODO remove after move tol LoglList
src/widgets/logs_notebook.py:        #TODO# move to loglist
src/widgets/logs_notebook.py:        #TODO# move to loglist
src/widgets/logs_notebook.py:        #TODO# move to loglist
#BUG#src/widgets/status_icon.py:        #TODO hide after release mouse


В Query:
drag-n-drop

быстрый поиск в тулбаре сделать цвет... строку и поиск

делать кнопки неактивными при выполнении запроса
разобраться с юникодом в окне просмотра лога
search... при переключении между вкладками
при переключении между вкладками search...
